{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
<h1>Report</h1>
<div class="two-col-layout-reverse">
    <div class="two-col-pri">
        <h2 id="kmom01">Kursmoment 01</h2>
        <h3>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</h3>
        <p>
            När det kommer till objektorientering så skulle jag vilja påstå att jag har en ganska god förståelse kring grunden.
            Detta då jag precis läst kursen algoritmer och datastrukturer med objektorienterad Python (OOP). Kursen tog upp mycket kring objektorienterad programmering och vad det innebär.
            Trotts att kurserna skiljer sig i val av programmeringsspråk så tänker jag att principen är den samma eller åtminstone liknande.
            Utöver OOP så har jag inte några tidigare erfarenheter som är värda att nämna.
        </p>

        <h3>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</h3>
        <p>
            De grunder man behöver förstå sig på för att komma igång är: class, properties, methods och constructor.
        </p>

        <p>
            För att definera en klass använder vi "class" exempelvis class Human. En klass är som en mall som man skapar sina objekt utifrån.
            Men för att denna mall ska vara mer användbar så kan vi använda oss utav properties och methods.
        </p>
        <p>
            En property i klassen Human kan till exempel vara $name som kommer att hålla människans namn eller kanske en $ssn för deras personnummer.
            När vi väl har skapat objektet utifrån mallen så kan vi sätta värdena på $name och $ssn specifikt för den personen(objektet).
            Detta gäller främst om vi inte har en constructor. Kortfattat så är en method en funktion som tillhör klassen.
        </p>
        <p>
            Personligen så tänkte jag på __init__ i Python när jag såg constructor första gången. Har klassen en constructor så skapas objektet utifrån vad som står där i.
            exempelvis så kan new Human() istället bli new Human("Pelle", "750910-1111"); som då kommer sätta $name till "Pelle" och $ssn till "750910-1111".
        </p>

        <h3>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</h3>
        <p>
            Det känns som att det är en del att hålla kolla på med samtidigt upplever jag att var sak har sin plats.
            Då allt är uppdelat så man får lov att hoppa emellan en del vilket jag märkt gör mig trött i huvudet i längden.
            Jag har även valt att använda mig utav SASS då jag tyckte det var ett trevligt verktyg i design kursen.
            Jag har även försökt strukturera upp CSS koden likt strukturen vi använda oss av i design kursen.
        </p>

        <h3>
            Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla?
            Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.
        </h3>
        <p>
            Den delen jag haft mest användning för hittills är "Coding Practices". Utöver det har jag mest bara skummat igenom artikeln.
            Av det jag skummade igenom kände jag att artikeln hade en hel del att erbjuda så den fick hamna i min referensmapp i bokmärksfältet.
            De delar jag tror att jag kommer nyfiket läsa vidare på är "Security" och "Databases".
        </p>

        <h3>Vilken är din TIL för detta kmom?</h3>
        <p>
            Symfony och dess delar är helt klart den stora lärdommen för veckan!
            Det har även varit en vecka för att fräscha upp sina PHP kunskaper lite grann.
        </p>

        <h2 id="kmom02">Kursmoment 02</h2>
        <h3>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</h3>

        <h4>Arv</h4>
        <p>
            En klass ärver från en annan. I mitt exempel är det CardGraphic som ärver av Card. CardGraphic har tillgång till Cards metoder och kan ändra på dessa metoder
            för att göra klassen mer specifik. I mitt fall så ändras metoderna för att hämta class namn till css och den visuella represenationen (strängen "A♥" blir en tom sträng).
        </p>

        <h4>Komposition</h4>
        <p>
            Väldigt kortfattat är det ett objekt som existerar på grund av ett annat. I mitt fall så existerar inte Card/CardGraphic utan en DeckOfCards.
            DeckOfCards blir då det äger då korten och om kortleken försvinner så existerar inte korten.
        </p>

        <h4>Interface</h4>
        <p>
            Som jag tolkat interface så är det ett typ av kontrakt som säger något i stil med "dessa metoder måste du implementera för att upprätthålla denna interface".
            Det jag tänker tillbaka till i min kod är Card och CardGraphic. Visserligen ärver CardGraphic metoderna från Card men ändrar på två av dem men de har fortfarande samma namn
            vilket gör att de båda körs i controllern men gör olika saker.
        </p>
        <h4>Trait</h4>
        <p>
            Trait är som en modul med metoder för klasser. Ett exempel jag hittat i min egen kod är CardHand och DeckOfCards som båda delar 3 metoder (getString, getLowRes, getArray).
            Dessa tre hade jag kunnat gjort en trait av och sedan använt mig av traiten i klasserna istället.
        </p>

        <h3>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</h3>
        <p>
            Jag valde att implementera fyra klasser utifrån förslaget vi fick.
            Den sista klassen CardGraphic blev lite av en efterkonstruktion då jag missade kravet av att ha minst ett arv och minst en komposition.
            Detta eftersom kravet inte var tydligt placerat i punktform bland de andra kraven. Jag är otroligt missnöjd över min lösning av uppgiften.
            Jag lyckas inte få till path i SASS med npm run build så jag måste ha style background-image i min html kod vilket krockar en del med stylingen.
            Jag har lyckats hitta lite "workarounds" men skulle vilja påstå att det är på bekostnad av kodkvalitet.
        </p>

        <h4>Förbättringspotential</h4>
        <p>
            Well... håll i er! Jag skapar alltid två h3 element i mina divar för korten oavsett om de skrivs något i dem eller ej. Jag har en metod som returnerar en tom sträng.
            Dåligt namngivna metoder getAsString borde till exempel heta getClassNames eller något i den stilen istället.
            Jag behöver använda en !important för att ta bort background-imagen som alltid genereras på divarna.
            Det finns säkert mycket mer att nämna men det var det jag kom på som hastigast.
        </p>

        <p>
            Med tanke på hur otroligt massivt detta kursmoment var så är jag ändå stolt över att jag hunnit klart i tid.
        </p>

        <h3>Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?</h3>
        <p>
            Jag satt faktiskt med en vanlig kortlek när jag höll på med denna uppgift. Det underlättade väldigt mycket medan jag arbetade med mitt UML diagram.
            Jag började tänka kring vad för värden ett kort kan tänkas ha. Jag gjorde samma sak med kortleken och min hand och konstaterade att dessa är typer av arrayer.
            En kortlek är en stack och handen är bara en tom array man kan lägga till kort i.
        </p>

        <h3>Vilken är din TIL för detta kmom?</h3>
        <p>
            Interface och Trait även lärt mig mer om programmering inom PHP.
            En sak jag upptäckte som jag tyckte var lite cool var att man kan göra redirect på routes med en status kod för att skicka vidare som exempelvis POST (307).
            Jag valde att skippa de optionella kraven då detta kursmoment redan var stort nog utan dem.
        </p>

        <h2 id="kmom03">Kursmoment 03</h2>
        <h3>Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?</h3>
        <p>
            Jag känner att jag måste öva/arbeta mer på planeringsfasen.
            Jag la upp en planering på ett ungefär hur jag ville utföra uppgiften men ganska snabbt upptäckte jag brister.
            Man kan väl se detta på två sätt, antingen har jag planerat dåligt eller så har jag en plan som är lätt att bygga vidare på.
            Det slutade vilket fall med att jag avvek lite från planeringen och skapade en del lösningar medan jag arbetade igenom uppgiften.
        </p>
        <p>
            Personligen uppskattade jag flödesdiagrammet då det gav en simpel men ändå klar bild på hur flödet skulle gå till. 
            Under psuedokod har jag en bild på kommentarer jag brukar skriva till mig själv.
            Det har blivit en del av min process så att göra det på ett annorlunda sätt kändes konstigt.
        </p>

        <h3>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden, dina klasser och applikationen som helhet?</h3>
        <p>
            Jag implementerade uppgiften genom att använda klasserna från förra veckan och bygga ut dem samt skapa en ny klass "TwentyOneGame".
            I TwentyOneGames constructor så instansieras två CardHand objekt och ett DeckOfCards objekt som sedan blir tilldelade som properties i TwentyOneGame.
            Hade jag vidareutvecklat detta hade jag nog skapat en player klass. En player klass hade gjort det enklare att utöka spelet med flerspelarläge.
            Då hade exempelvis TwentyOneGame haft en propery som håller en array med spelare. Player klassen hade då haft en name property och en CardHand.
        </p>
        <p>
            Jag är "nöjd" över att jag lyckats göra uppgiften men det känns som det finns mycket att förbättra.
            Känslan av att det alltid finns något att göra bättre påverkar självklart lyckan i att klara en uppgift.
        </p>

        <h3>Vilken är din känsla för att koda i ett ramverk som Symfony, så här långt in i kursen?</h3>
        <p>
            Jag tycker att det känns bra. Allt har en tydlig struktur och med de verktyg vi installerat så känns det som att man håller någon form av kodstandard.
            Jag tror att Symfony har mer att erbjuda men att det kan vara bra att förstå de delar vi håller på med först.
        </p>

        <h3>Vilken är din TIL för detta kmom?</h3>
        <p>
            Det känns som att jag fått träna på att tänka djupare och fatta egna beslut. Det låter kanske litet lustigt men vissa uppgifter är väldigt fyrkantiga och spelar mycket på övningsuppgiften.
            Det gör det lätt att hitta ett mönster i hur man bör gå tillväga vilket ger lite mindre rum för det egna tänkandet.
        </p>

        <h2 id="kmom04">Kursmoment 04</h2>
        <h3>PH QUESTION</h3>
        <p>
            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Soluta, nihil!
        </p>

        <h2 id="kmom05">Kursmoment 05</h2>
        <h3>PH QUESTION</h3>
        <p>
            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Soluta, nihil!
        </p>

        <h2 id="kmom06">Kursmoment 06</h2>
        <h3>PH QUESTION</h3>
        <p>
            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Soluta, nihil!
        </p>

        <h2 id="kmom07">Kursmoment 07-10</h2>
        <h3>PH QUESTION</h3>
        <p>
            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Soluta, nihil!
        </p>
    </div>
    <div class="two-col-sec">
        <a href="#kmom01">Kmom01</a>
        <a href="#kmom02">Kmom02</a>
        <a href="#kmom03">Kmom03</a>
        <a href="#kmom04">Kmom04</a>
        <a href="#kmom05">Kmom05</a>
        <a href="#kmom06">Kmom06</a>
        <a href="#kmom07">Kmom07</a>
    </div>
</div>
{% endblock %}
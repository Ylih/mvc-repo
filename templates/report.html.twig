{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
<h1>Report</h1>
<div class="two-col-layout-reverse">
    <div class="two-col-pri">
        <h2 id="kmom01">Kursmoment 01</h2>
        <h3>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</h3>
        <p>
            När det kommer till objektorientering så skulle jag vilja påstå att jag har en ganska god förståelse kring grunden.
            Detta då jag precis läst kursen algoritmer och datastrukturer med objektorienterad Python (OOP). Kursen tog upp mycket kring objektorienterad programmering och vad det innebär.
            Trotts att kurserna skiljer sig i val av programmeringsspråk så tänker jag att principen är den samma eller åtminstone liknande.
            Utöver OOP så har jag inte några tidigare erfarenheter som är värda att nämna.
        </p>

        <h3>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</h3>
        <p>
            De grunder man behöver förstå sig på för att komma igång är: class, properties, methods och constructor.
        </p>

        <p>
            För att definera en klass använder vi "class" exempelvis class Human. En klass är som en mall som man skapar sina objekt utifrån.
            Men för att denna mall ska vara mer användbar så kan vi använda oss utav properties och methods.
        </p>
        <p>
            En property i klassen Human kan till exempel vara $name som kommer att hålla människans namn eller kanske en $ssn för deras personnummer.
            När vi väl har skapat objektet utifrån mallen så kan vi sätta värdena på $name och $ssn specifikt för den personen(objektet).
            Detta gäller främst om vi inte har en constructor. Kortfattat så är en method en funktion som tillhör klassen.
        </p>
        <p>
            Personligen så tänkte jag på __init__ i Python när jag såg constructor första gången. Har klassen en constructor så skapas objektet utifrån vad som står där i.
            exempelvis så kan new Human() istället bli new Human("Pelle", "750910-1111"); som då kommer sätta $name till "Pelle" och $ssn till "750910-1111".
        </p>

        <h3>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</h3>
        <p>
            Det känns som att det är en del att hålla kolla på med samtidigt upplever jag att var sak har sin plats.
            Då allt är uppdelat så man får lov att hoppa emellan en del vilket jag märkt gör mig trött i huvudet i längden.
            Jag har även valt att använda mig utav SASS då jag tyckte det var ett trevligt verktyg i design kursen.
            Jag har även försökt strukturera upp CSS koden likt strukturen vi använda oss av i design kursen.
        </p>

        <h3>
            Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla?
            Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.
        </h3>
        <p>
            Den delen jag haft mest användning för hittills är "Coding Practices". Utöver det har jag mest bara skummat igenom artikeln.
            Av det jag skummade igenom kände jag att artikeln hade en hel del att erbjuda så den fick hamna i min referensmapp i bokmärksfältet.
            De delar jag tror att jag kommer nyfiket läsa vidare på är "Security" och "Databases".
        </p>

        <h3>Vilken är din TIL för detta kmom?</h3>
        <p>
            Symfony och dess delar är helt klart den stora lärdommen för veckan!
            Det har även varit en vecka för att fräscha upp sina PHP kunskaper lite grann.
        </p>

        <h2 id="kmom02">Kursmoment 02</h2>
        <h3>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</h3>

        <h4>Arv</h4>
        <p>
            En klass ärver från en annan. I mitt exempel är det CardGraphic som ärver av Card. CardGraphic har tillgång till Cards metoder och kan ändra på dessa metoder
            för att göra klassen mer specifik. I mitt fall så ändras metoderna för att hämta class namn till css och den visuella represenationen (strängen "A♥" blir en tom sträng).
        </p>

        <h4>Komposition</h4>
        <p>
            Väldigt kortfattat är det ett objekt som existerar på grund av ett annat. I mitt fall så existerar inte Card/CardGraphic utan en DeckOfCards.
            DeckOfCards blir då det äger då korten och om kortleken försvinner så existerar inte korten.
        </p>

        <h4>Interface</h4>
        <p>
            Som jag tolkat interface så är det ett typ av kontrakt som säger något i stil med "dessa metoder måste du implementera för att upprätthålla denna interface".
            Det jag tänker tillbaka till i min kod är Card och CardGraphic. Visserligen ärver CardGraphic metoderna från Card men ändrar på två av dem men de har fortfarande samma namn
            vilket gör att de båda körs i controllern men gör olika saker.
        </p>
        <h4>Trait</h4>
        <p>
            Trait är som en modul med metoder för klasser. Ett exempel jag hittat i min egen kod är CardHand och DeckOfCards som båda delar 3 metoder (getString, getLowRes, getArray).
            Dessa tre hade jag kunnat gjort en trait av och sedan använt mig av traiten i klasserna istället.
        </p>

        <h3>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</h3>
        <p>
            Jag valde att implementera fyra klasser utifrån förslaget vi fick.
            Den sista klassen CardGraphic blev lite av en efterkonstruktion då jag missade kravet av att ha minst ett arv och minst en komposition.
            Detta eftersom kravet inte var tydligt placerat i punktform bland de andra kraven. Jag är otroligt missnöjd över min lösning av uppgiften.
            Jag lyckas inte få till path i SASS med npm run build så jag måste ha style background-image i min html kod vilket krockar en del med stylingen.
            Jag har lyckats hitta lite "workarounds" men skulle vilja påstå att det är på bekostnad av kodkvalitet.
        </p>

        <h4>Förbättringspotential</h4>
        <p>
            Well... håll i er! Jag skapar alltid två h3 element i mina divar för korten oavsett om de skrivs något i dem eller ej. Jag har en metod som returnerar en tom sträng.
            Dåligt namngivna metoder getAsString borde till exempel heta getClassNames eller något i den stilen istället.
            Jag behöver använda en !important för att ta bort background-imagen som alltid genereras på divarna.
            Det finns säkert mycket mer att nämna men det var det jag kom på som hastigast.
        </p>

        <p>
            Med tanke på hur otroligt massivt detta kursmoment var så är jag ändå stolt över att jag hunnit klart i tid.
        </p>

        <h3>Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?</h3>
        <p>
            Jag satt faktiskt med en vanlig kortlek när jag höll på med denna uppgift. Det underlättade väldigt mycket medan jag arbetade med mitt UML diagram.
            Jag började tänka kring vad för värden ett kort kan tänkas ha. Jag gjorde samma sak med kortleken och min hand och konstaterade att dessa är typer av arrayer.
            En kortlek är en stack och handen är bara en tom array man kan lägga till kort i.
        </p>

        <h3>Vilken är din TIL för detta kmom?</h3>
        <p>
            Interface och Trait även lärt mig mer om programmering inom PHP.
            En sak jag upptäckte som jag tyckte var lite cool var att man kan göra redirect på routes med en status kod för att skicka vidare som exempelvis POST (307).
            Jag valde att skippa de optionella kraven då detta kursmoment redan var stort nog utan dem.
        </p>

        <h2 id="kmom03">Kursmoment 03</h2>
        <h3>Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?</h3>
        <p>
            Jag känner att jag måste öva/arbeta mer på planeringsfasen.
            Jag la upp en planering på ett ungefär hur jag ville utföra uppgiften men ganska snabbt upptäckte jag brister.
            Man kan väl se detta på två sätt, antingen har jag planerat dåligt eller så har jag en plan som är lätt att bygga vidare på.
            Det slutade vilket fall med att jag avvek lite från planeringen och skapade en del lösningar medan jag arbetade igenom uppgiften.
        </p>
        <p>
            Personligen uppskattade jag flödesdiagrammet då det gav en simpel men ändå klar bild på hur flödet skulle gå till. 
            Under psuedokod har jag en bild på kommentarer jag brukar skriva till mig själv.
            Det har blivit en del av min process så att göra det på ett annorlunda sätt kändes konstigt.
        </p>

        <h3>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden, dina klasser och applikationen som helhet?</h3>
        <p>
            Jag implementerade uppgiften genom att använda klasserna från förra veckan och bygga ut dem samt skapa en ny klass "TwentyOneGame".
            I TwentyOneGames constructor så instansieras två CardHand objekt och ett DeckOfCards objekt som sedan blir tilldelade som properties i TwentyOneGame.
            Hade jag vidareutvecklat detta hade jag nog skapat en player klass. En player klass hade gjort det enklare att utöka spelet med flerspelarläge.
            Då hade exempelvis TwentyOneGame haft en propery som håller en array med spelare. Player klassen hade då haft en name property och en CardHand.
        </p>
        <p>
            Jag är "nöjd" över att jag lyckats göra uppgiften men det känns som det finns mycket att förbättra.
            Känslan av att det alltid finns något att göra bättre påverkar självklart lyckan i att klara en uppgift.
        </p>

        <h3>Vilken är din känsla för att koda i ett ramverk som Symfony, så här långt in i kursen?</h3>
        <p>
            Jag tycker att det känns bra. Allt har en tydlig struktur och med de verktyg vi installerat så känns det som att man håller någon form av kodstandard.
            Jag tror att Symfony har mer att erbjuda men att det kan vara bra att förstå de delar vi håller på med först.
        </p>

        <h3>Vilken är din TIL för detta kmom?</h3>
        <p>
            Det känns som att jag fått träna på att tänka djupare och fatta egna beslut. Det låter kanske litet lustigt men vissa uppgifter är väldigt fyrkantiga och spelar mycket på övningsuppgiften.
            Det gör det lätt att hitta ett mönster i hur man bör gå tillväga vilket ger lite mindre rum för det egna tänkandet.
        </p>

        <h2 id="kmom04">Kursmoment 04</h2>
        <h3>Berätta hur du upplevde att skriva kod som testar annan kod med PHPUnit och hur du upplever phpunit rent allmänt.</h3>
        <p>
            Installationen gick inte helt felfritt. Jag körde en för gammal version av PHPUnit i min composer.json vilket gjorde att min phpunit.xml inte fungerade som den skulle.
            Jag löste detta genom att installera om allt och skriva "^10" i composer.json. När jag väl kom igång så tyckte jag att det gick fort att skriva mina tester.
            Det påminde mycket om när vi skrev tester i OOP kursen.
        </p>
        <h3>Hur väl lyckades du med kodtäckningen av din kod, lyckades du nå mer än 90% kodtäckning?</h3>
        <p>
            Jag lyckades nå 100% kodtäckning i mitt namespace för App\Card. Däremot är inte mina tester särskilt roliga då de flesta kollar positivta cases när allt gått som det ska.
            Jag testar de exceptions som kastas om något går tokigt till men jag har svårt att komma på kreativa tester då användaren gör något tokigt.
        </p>
        <h3>Upplever du din egen kod som “testbar kod” eller finns det delar i koden som är mer eller mindre testbar och finns det saker som kan göras för att förbättra kodens testbarhet?</h3>
        <p>
            Min kod är väl inte den mest testbara. Det är en hel del coupling involverat i min kod och ska man göra rätt för sig hade det krävts en del mockande.
            I efterhand så hade jag kunnat flytta på containsAce till CardHand klassen för att ta bort ett steg i kedjan. Det hade gått från TwentyOneGame.containsAce -> Hand.getHand -> Card.setValue till
            Hand.getHand -> Card.setValue. Däremot så tycker jag att handleAce passar i TwentyOneGame klassen fast den tekniskt sätt också hade kunnat flyttats till CardHand.
            Jag tycker detta eftersom den metoden har med spelets logik att göra.
        </p>
        <h3>Valde du att skriva om delar av din kod för att förbättra den eller göra den mer testbar, om så berätta lite hur du tänkte.</h3>
        <p>
            Jag valde att inte skriva om någon kod. Däremot valde jag att lägga till en metod i min DeckOfCards som returnerar arrayen som håller alla 52 korten.
            Jag gjorde detta för att kunna använda assertCount på arrayen för att se om summan av föremål blev mindre när man drar ett kort.
        </p>
        <h3>Fundera över om du anser att testbar kod är något som kan identifiera “snygg och ren kod”.</h3>
        <p>
            Personligen skulle jag vilja påstå att snygg och ren kod är kod som är lätt att förstå och inte onödigt komplex.
            Det verkar som att det finns ett samband mellan enkelhet och testbarhet så därför skulle jag vilja påstå att testbar kod är ett steg mot snygg och ren kod.
        </p>
        <h3>Vilken är din TIL för detta kmom?</h3>
        <p>
            I detta kursmoment har jag lärt mig om phpunit, enhetstestning och hur man kan använda sig av phpdoc för att generera dokumentation för sin kod.
        </p>

        <h2 id="kmom05">Kursmoment 05</h2>

        <h3>Gick det bra att jobba igenom övningen med Symfony och Doctrine. Något särskilt du tänkte/reagerade på under övningen?</h3>
        <p>
            Det gick bra för mig att arbeta igenom övningen. Installationen gick snabbt och smidigt och övningen gav en god inblick i hur jag skulle tackla uppgiften.
            En tanke som kom upp under övningen var hur fort det gick att få till en databas med tabeller med doctrine. När jag kollade på min entity "Book" så insåg jag också
            hur mycket den klassen påminnde om en tabell i en databas. Book har getters och setters vilket man kan jämföra mot queries som select och update.
        </p>
        <table class="table">
            <caption>Book</caption>
            <thead>
                <th>ID</th>
                <th>Title</th>
                <th>Author</th>
                <th>ISBN</th>
                <th>Image</th>
            </thead>
            <tbody>
                <tr>
                    <td>6</td>
                    <td>The Great Gatsby</td>
                    <td>F. Scott Fitzgerald</td>
                    <td>9780241341469</td>
                    <td>---</td>
                </tr>
            </tbody>
        </table>

        <h3>Berätta om din applikation och hur du tänkte när du byggde upp den. Tänkte du något speciellt på användargränssnittet?</h3>
        <p>
            Min första tanke var att låta landningssidan vara som de tidigare uppgifterna. Den skulle ha knappar för att ta sig vidare till andra sidor.
            Jag insåg att jag inte tyckte det var ett jättebra gränssnitt i detta sammanhang så jag gjorde om det.
            Jag gjorde så man kan se tabellen med alla böcker på landningssidan och sedan under tabellen ligger en knapp för att lägga till ny bok.
            Sedan kan man visa upp specifik bok, redigera bok eller ta bort bok genom att trycka på en av ikonerna i tabellen under kolumnen "Tools".
            Man kan även trycka på bokens id-nummer för att få fram den specifika vyn.
        </p>

        <h3>Gick det bra att jobba med ORM i CRUD eller vad anser du om det, jämför gärna med andra sätt att jobba med databaser?</h3>
        <p>
            Det gick bra och väldigt fort. Om jag hade behövt bygga databasen för hand hade det tagit mycket längre tid. Däremot hade jag nog kunnat skräddarsy
            databasen mer efter mina egna behov samt haft större koll på den.
        </p>

        <h3>Vad är din uppfattning om ORM så här långt och relatera gärna till andra sätt att jobba med applikationskod mot databaser?</h3>
        <p>
            Min uppfattning om ORM är att det fungerar som en tolk mellan programmeringsspråk och databas queries.
            Eftersom queries kan se annorlunda ut beroende på vilken databas man använder så hjälper ORM oss genom att skriva om all vår kod för just den typen av databas.
            En annan stor fördel med ORM är att man kan byta databas utan större problem så länge det finns stöd för den. Eftersom vi använder oss utav doctrine i detta fall
            så är det de databaser som existerar inom doctrines DBAL (database abstraction layer) som det finns stöd för.
        </p>

        <h3>Vilken är din TIL för detta kmom?</h3>
        <p>
            I detta kursmoment har jag huvudsakligen lärt mig om ORM och doctrine.
        </p>

        <h2 id="kmom06">Kursmoment 06</h2>
        <h3>PH QUESTION</h3>
        <p>
            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Soluta, nihil!
        </p>

        <h2 id="kmom07">Kursmoment 07-10</h2>
        <h3>PH QUESTION</h3>
        <p>
            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Soluta, nihil!
        </p>
    </div>
    <div class="two-col-sec">
        <a href="#kmom01">Kmom01</a>
        <a href="#kmom02">Kmom02</a>
        <a href="#kmom03">Kmom03</a>
        <a href="#kmom04">Kmom04</a>
        <a href="#kmom05">Kmom05</a>
        <a href="#kmom06">Kmom06</a>
        <a href="#kmom07">Kmom07</a>
    </div>
</div>
{% endblock %}